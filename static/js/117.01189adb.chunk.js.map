{"version":3,"file":"static/js/117.01189adb.chunk.js","mappings":"4PAGaA,EAAUC,EAAAA,EAAAA,IAAH,0HAKJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,SAAZ,IAGJC,EAAYJ,EAAAA,EAAAA,GAAH,uEAKTK,EAAWL,EAAAA,EAAAA,GAAH,gDAGRM,EAAcN,EAAAA,EAAAA,EAAH,gDAIXO,EAAUP,EAAAA,EAAAA,GAAH,0EAMPQ,GAAUR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,iVACE,SAAAC,GAAC,OAAIA,EAAEC,MAAMQ,OAAOC,gBAAnB,IAGZ,SAAAV,GAAC,OAAIA,EAAEC,MAAMQ,OAAOC,gBAAnB,IAIU,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,UAAZ,IACP,SAAAX,GAAC,OAAIA,EAAEC,MAAMU,UAAZ,IAKJ,SAAAX,GAAC,OAAIA,EAAEC,MAAMQ,OAAOG,gBAAnB,IACU,SAAAZ,GAAC,OAAIA,EAAEC,MAAMQ,OAAOG,gBAAnB,IAKZC,EAAWd,EAAAA,EAAAA,IAAH,oGAQRe,EAAUf,EAAAA,EAAAA,IAAH,0H,kBCoCpB,EA9Ee,WAAO,IAAD,IACXgB,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAQ9C,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaX,GACVY,KAAKR,GACLS,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACd,IAECG,GAKH,UAACpB,EAAD,YACE,SAACS,EAAD,CAASyB,KAAK,SAASC,GAAIX,EAA3B,sBAGA,SAACxB,EAAD,WACE,UAACe,EAAD,YACE,gBACEqB,IACEhB,EAASiB,YAAT,yCACsCjB,EAASiB,aAC3CC,EAENC,IAAG,iBAAYnB,EAASoB,OAASpB,EAASqB,MAC1CC,MAAM,QACNC,OAAO,WAET,SAAC3B,EAAD,WACE,4BACE,UAACX,EAAD,eAAae,EAASoB,UACtB,UAACjC,EAAD,yBAEGa,EAASwB,aAC6B,GAAnCxB,EAASwB,aAAaC,QAAQ,GAAU,IACxC,+BAEN,SAACvC,EAAD,wBACA,SAACC,EAAD,UAAca,EAAS0B,YACvB,SAACxC,EAAD,sBACA,SAACC,EAAD,UACGa,EAAS2B,OACN3B,EAAS2B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMR,KAAO,GAAjB,IACzB,wBAMd,UAACzC,EAAD,YACE,SAACM,EAAD,sCACA,UAACE,EAAD,YACE,yBACE,SAACC,EAAD,CAAS0B,GAAG,OAAOV,MAAO,CAAEC,KAAMF,GAAlC,qBAIF,yBACE,SAACf,EAAD,CAAS0B,GAAG,UAAUV,MAAO,CAAEC,KAAMF,GAArC,8BAMN,SAACxB,EAAD,WACE,SAAC,EAAAkD,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,YA1DC,sCA+DV,C","sources":["components/pages/Lesson/Lesson.styled.jsx","components/pages/Lesson/Lesson.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 95%;\n  margin: 20px auto;\n  padding: 10px;\n  box-shadow: ${p => p.theme.boxShadow};\n`;\n\nexport const FilmTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const SubTitle = styled.h2`\n  margin-bottom: 20px;\n`;\nexport const Description = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const NavList = styled.ul`\n  padding: 10px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  border: 1px solid ${p => p.theme.colors.primaryTextColor};\n  border-radius: 5px;\n  padding: 4px;\n  color: ${p => p.theme.colors.primaryTextColor};\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  transition: color ${p => p.theme.transition},\n    transform ${p => p.theme.transition};\n\n  &:hover,\n  &:focus,\n  &.active {\n    color: ${p => p.theme.colors.accentСolor};\n    border: 1px solid ${p => p.theme.colors.accentСolor};\n    transform: scale(1.04);\n  }\n`;\n\nexport const FilmInfo = styled.div`\n  height: 440px;\n  display: flex;\n  img {\n    border-radius: 10px;\n  }\n`;\n\nexport const InfoBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 20px;\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getMovieById } from '../../services/coursesApi';\nimport {\n  NavItem,\n  Wrapper,\n  FilmInfo,\n  NavList,\n  InfoBox,\n  FilmTitle,\n  SubTitle,\n  Description,\n} from './Lesson.styled';\nimport img from '../../images/depositphotos_12766135-stock-photo-3d-cinema-clapper-film-reel.jpg';\n\nconst Lesson = () => {\n  const { id } = useParams();\n  const [filmData, setFilmData] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(id)\n      .then(setFilmData)\n      .catch(err => console.log(err));\n  }, [id]);\n\n  if (!filmData) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <Wrapper>\n      <NavItem type=\"button\" to={backLinkHref}>\n        Go back\n      </NavItem>\n      <Wrapper>\n        <FilmInfo>\n          <img\n            src={\n              filmData.poster_path\n                ? `https://image.tmdb.org/t/p/w500${filmData.poster_path}`\n                : img\n            }\n            alt={`Poster ${filmData.title || filmData.name}`}\n            width=\"300px\"\n            height=\"440px\"\n          />\n          <InfoBox>\n            <div>\n              <FilmTitle> {filmData.title}</FilmTitle>\n              <Description>\n                User Score:\n                {filmData.vote_average\n                  ? filmData.vote_average.toFixed(1) * 10 + '%'\n                  : 'the movie is not popular'}\n              </Description>\n              <SubTitle>Overview</SubTitle>\n              <Description>{filmData.overview}</Description>\n              <SubTitle>Geners</SubTitle>\n              <Description>\n                {filmData.genres\n                  ? filmData.genres.map(genre => genre.name + ' ')\n                  : 'no genre'}\n              </Description>\n            </div>\n          </InfoBox>\n        </FilmInfo>\n      </Wrapper>\n      <Wrapper>\n        <SubTitle>Additional information</SubTitle>\n        <NavList>\n          <li>\n            <NavItem to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </NavItem>\n          </li>\n          <li>\n            <NavItem to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </NavItem>\n          </li>\n        </NavList>\n      </Wrapper>\n      <Wrapper>\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Outlet />\n        </Suspense>\n      </Wrapper>\n    </Wrapper>\n  );\n};\n\nexport default Lesson;\n"],"names":["Wrapper","styled","p","theme","boxShadow","FilmTitle","SubTitle","Description","NavList","NavItem","NavLink","colors","primaryTextColor","transition","accentСolor","FilmInfo","InfoBox","id","useParams","useState","filmData","setFilmData","location","useLocation","backLinkHref","state","from","useEffect","getMovieById","then","catch","err","console","log","type","to","src","poster_path","img","alt","title","name","width","height","vote_average","toFixed","overview","genres","map","genre","Suspense","fallback"],"sourceRoot":""}